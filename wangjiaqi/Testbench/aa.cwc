<chipwatcher project_name="adc" bit_file="adc_Runs/phy_1/adc.bit" bid_file="adc_Runs/phy_1/adc_inst.bid" chip_name="EG4S20NG88">
	<instance name="auto_chipwatcher_0" id="0" enabled="yes">
		<clock clk_name="sys_clk" polarity="posedge"/>
		<config bram_name="auto_chipwatcher_0_logicbram" sample_depth="4096"/>
		<signal_vec>
			<data_nets>
				<net name="data[0]"/>
				<net name="data[1]"/>
				<net name="data[2]"/>
				<net name="data[3]"/>
				<net name="data[4]"/>
				<net name="data[5]"/>
				<net name="data[6]"/>
				<net name="data[7]"/>
				<net name="eoc"/>
				<net name="oe"/>
				<net name="start"/>
				<net name="state[0]"/>
				<net name="state[1]"/>
				<net name="state[2]"/>
			</data_nets>
			<watcher_nodes>
				<bus name="data" radix="bin" state="collapse" op="dont_care" type="input">
					<net name="data[7]" type="input" trigger="enable"/>
					<net name="data[6]" type="input" trigger="enable"/>
					<net name="data[5]" type="input" trigger="enable"/>
					<net name="data[4]" type="input" trigger="enable"/>
					<net name="data[3]" type="input" trigger="enable"/>
					<net name="data[2]" type="input" trigger="enable"/>
					<net name="data[1]" type="input" trigger="enable"/>
					<net name="data[0]" type="input" trigger="enable"/>
				</bus>
				<net name="eoc" op="equal" type="input" trigger="enable"/>
				<net name="oe" op="equal" type="output" trigger="enable"/>
				<net name="start" op="equal" type="output" trigger="enable"/>
				<bus name="state" radix="bin" state="collapse" op="dont_care" type="reg">
					<net name="state[2]" type="reg" trigger="enable"/>
					<net name="state[1]" type="reg" trigger="enable"/>
					<net name="state[0]" type="reg" trigger="enable"/>
				</bus>
			</watcher_nodes>
		</signal_vec>
		<trigger name="auto_chipwatcher_0_trigger" position="pre">
			<condition level="1" enabled="yes" type="basic_and">
				data[0] == low && data[1] == low && data[2] == low && data[3] == low && data[4] == low && data[5] == low && data[6] == low && data[7] == low && eoc == any && oe == any && start == any && state[0] == low && state[1] == low && state[2] == low
			</condition>
			<log>
			</log>
		</trigger>
	</instance>
</chipwatcher>
